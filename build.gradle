buildscript {
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.61"
    id "org.jetbrains.kotlin.kapt" version "1.3.61"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.61"
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "application"
    id 'com.google.cloud.tools.jib' version '1.7.0'
}

apply plugin: "kotlin-jpa"

version "0.1"
group "dk.fitfit.injurylog"

jib {
    from {
        image = "adoptopenjdk:11.0.5_10-jre-hotspot"
    }
    to {
        image = "registry.heroku.com/injury-log/web"
        tags = [project.version]
    }
    container {
        user = "guest"
    }
}

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
    maven {
        url 'https://dl.bintray.com/tons/tons'
    }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    implementation "io.micronaut:micronaut-runtime"
    implementation "javax.annotation:javax.annotation-api"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"
    kapt platform("io.micronaut:micronaut-bom:$micronautVersion")
    kapt "io.micronaut:micronaut-inject-java"
    kapt "io.micronaut:micronaut-validation"
    kaptTest platform("io.micronaut:micronaut-bom:$micronautVersion")
    kaptTest "io.micronaut:micronaut-inject-java"
    runtimeOnly "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "io.micronaut.test:micronaut-test-kotlintest"
    testImplementation "io.mockk:mockk:1.9.3"
    testImplementation "io.kotlintest:kotlintest-runner-junit5:3.3.2"
    testImplementation "io.micronaut.test:micronaut-test-junit5:1.1.2"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:5.1.0"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:1.3.61"

    implementation "io.micronaut:micronaut-security-jwt"
    implementation 'com.google.api-client:google-api-client:1.30.5'

    kapt "io.micronaut.data:micronaut-data-processor:1.0.0.M4"
    compile 'io.micronaut.data:micronaut-data-hibernate-jpa:1.0.0.M4'
    runtimeOnly "com.h2database:h2"
    runtimeOnly 'org.postgresql:postgresql:42.2.8'
    runtimeOnly "io.micronaut.configuration:micronaut-jdbc-hikari"

    compile 'com.amazonaws:aws-java-sdk-s3:1.11.414'

    compile 'io.github.microutils:kotlin-logging:1.7.7'

    implementation 'dk.fitfit.injurylog:injurylog-dto:0.2'
}

test.classpath += configurations.developmentOnly

mainClassName = "dk.fitfit.injurylog.Application"

test {
    useJUnitPlatform()
}

allOpen {
	annotations("io.micronaut.aop.Around", "javax.transaction.Transactional")
}

compileKotlin {
	kotlinOptions {
	    jvmTarget = '1.8' 
	    //Will retain parameter names for Java reflection
	    javaParameters = true 
	}
}

compileTestKotlin {
	kotlinOptions {
	    jvmTarget = '1.8' 
	    javaParameters = true 
	}
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
